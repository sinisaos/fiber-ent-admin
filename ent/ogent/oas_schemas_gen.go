// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"time"

	"github.com/go-faster/jx"
)

// Ref: #/components/schemas/Answer_AuthorRead
type AnswerAuthorRead struct {
	ID        int       `json:"id"`
	Username  string    `json:"username"`
	Email     string    `json:"email"`
	CreatedAt time.Time `json:"created_at"`
	Superuser bool      `json:"superuser"`
}

// GetID returns the value of ID.
func (s *AnswerAuthorRead) GetID() int {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *AnswerAuthorRead) GetUsername() string {
	return s.Username
}

// GetEmail returns the value of Email.
func (s *AnswerAuthorRead) GetEmail() string {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *AnswerAuthorRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetSuperuser returns the value of Superuser.
func (s *AnswerAuthorRead) GetSuperuser() bool {
	return s.Superuser
}

// SetID sets the value of ID.
func (s *AnswerAuthorRead) SetID(val int) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *AnswerAuthorRead) SetUsername(val string) {
	s.Username = val
}

// SetEmail sets the value of Email.
func (s *AnswerAuthorRead) SetEmail(val string) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *AnswerAuthorRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetSuperuser sets the value of Superuser.
func (s *AnswerAuthorRead) SetSuperuser(val bool) {
	s.Superuser = val
}

func (*AnswerAuthorRead) readAnswerAuthorRes() {}

// Ref: #/components/schemas/AnswerCreate
type AnswerCreate struct {
	ID        int       `json:"id"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *AnswerCreate) GetID() int {
	return s.ID
}

// GetContent returns the value of Content.
func (s *AnswerCreate) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *AnswerCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *AnswerCreate) SetID(val int) {
	s.ID = val
}

// SetContent sets the value of Content.
func (s *AnswerCreate) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *AnswerCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*AnswerCreate) createAnswerRes() {}

// Ref: #/components/schemas/AnswerList
type AnswerList struct {
	ID        int       `json:"id"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *AnswerList) GetID() int {
	return s.ID
}

// GetContent returns the value of Content.
func (s *AnswerList) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *AnswerList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *AnswerList) SetID(val int) {
	s.ID = val
}

// SetContent sets the value of Content.
func (s *AnswerList) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *AnswerList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/Answer_QuestionRead
type AnswerQuestionRead struct {
	ID        int       `json:"id"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *AnswerQuestionRead) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *AnswerQuestionRead) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *AnswerQuestionRead) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *AnswerQuestionRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *AnswerQuestionRead) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *AnswerQuestionRead) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *AnswerQuestionRead) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *AnswerQuestionRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*AnswerQuestionRead) readAnswerQuestionRes() {}

// Ref: #/components/schemas/AnswerRead
type AnswerRead struct {
	ID        int       `json:"id"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *AnswerRead) GetID() int {
	return s.ID
}

// GetContent returns the value of Content.
func (s *AnswerRead) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *AnswerRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *AnswerRead) SetID(val int) {
	s.ID = val
}

// SetContent sets the value of Content.
func (s *AnswerRead) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *AnswerRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*AnswerRead) readAnswerRes() {}

// Ref: #/components/schemas/AnswerUpdate
type AnswerUpdate struct {
	ID        int       `json:"id"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *AnswerUpdate) GetID() int {
	return s.ID
}

// GetContent returns the value of Content.
func (s *AnswerUpdate) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *AnswerUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *AnswerUpdate) SetID(val int) {
	s.ID = val
}

// SetContent sets the value of Content.
func (s *AnswerUpdate) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *AnswerUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*AnswerUpdate) updateAnswerRes() {}

type CreateAnswerReq struct {
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
	Question  OptInt    `json:"question"`
	Author    OptInt    `json:"author"`
}

// GetContent returns the value of Content.
func (s *CreateAnswerReq) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateAnswerReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetQuestion returns the value of Question.
func (s *CreateAnswerReq) GetQuestion() OptInt {
	return s.Question
}

// GetAuthor returns the value of Author.
func (s *CreateAnswerReq) GetAuthor() OptInt {
	return s.Author
}

// SetContent sets the value of Content.
func (s *CreateAnswerReq) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateAnswerReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetQuestion sets the value of Question.
func (s *CreateAnswerReq) SetQuestion(val OptInt) {
	s.Question = val
}

// SetAuthor sets the value of Author.
func (s *CreateAnswerReq) SetAuthor(val OptInt) {
	s.Author = val
}

type CreateQuestionReq struct {
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
	Answers   []int     `json:"answers"`
	Author    OptInt    `json:"author"`
	Tags      []int     `json:"tags"`
}

// GetTitle returns the value of Title.
func (s *CreateQuestionReq) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *CreateQuestionReq) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateQuestionReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetAnswers returns the value of Answers.
func (s *CreateQuestionReq) GetAnswers() []int {
	return s.Answers
}

// GetAuthor returns the value of Author.
func (s *CreateQuestionReq) GetAuthor() OptInt {
	return s.Author
}

// GetTags returns the value of Tags.
func (s *CreateQuestionReq) GetTags() []int {
	return s.Tags
}

// SetTitle sets the value of Title.
func (s *CreateQuestionReq) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *CreateQuestionReq) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateQuestionReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetAnswers sets the value of Answers.
func (s *CreateQuestionReq) SetAnswers(val []int) {
	s.Answers = val
}

// SetAuthor sets the value of Author.
func (s *CreateQuestionReq) SetAuthor(val OptInt) {
	s.Author = val
}

// SetTags sets the value of Tags.
func (s *CreateQuestionReq) SetTags(val []int) {
	s.Tags = val
}

type CreateTagReq struct {
	Name      string `json:"name"`
	Questions []int  `json:"questions"`
}

// GetName returns the value of Name.
func (s *CreateTagReq) GetName() string {
	return s.Name
}

// GetQuestions returns the value of Questions.
func (s *CreateTagReq) GetQuestions() []int {
	return s.Questions
}

// SetName sets the value of Name.
func (s *CreateTagReq) SetName(val string) {
	s.Name = val
}

// SetQuestions sets the value of Questions.
func (s *CreateTagReq) SetQuestions(val []int) {
	s.Questions = val
}

type CreateUserReq struct {
	Username  string    `json:"username"`
	Email     string    `json:"email"`
	Password  string    `json:"password"`
	CreatedAt time.Time `json:"created_at"`
	Superuser bool      `json:"superuser"`
	Questions []int     `json:"questions"`
	Answers   []int     `json:"answers"`
	Tags      []int     `json:"tags"`
}

// GetUsername returns the value of Username.
func (s *CreateUserReq) GetUsername() string {
	return s.Username
}

// GetEmail returns the value of Email.
func (s *CreateUserReq) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *CreateUserReq) GetPassword() string {
	return s.Password
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateUserReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetSuperuser returns the value of Superuser.
func (s *CreateUserReq) GetSuperuser() bool {
	return s.Superuser
}

// GetQuestions returns the value of Questions.
func (s *CreateUserReq) GetQuestions() []int {
	return s.Questions
}

// GetAnswers returns the value of Answers.
func (s *CreateUserReq) GetAnswers() []int {
	return s.Answers
}

// GetTags returns the value of Tags.
func (s *CreateUserReq) GetTags() []int {
	return s.Tags
}

// SetUsername sets the value of Username.
func (s *CreateUserReq) SetUsername(val string) {
	s.Username = val
}

// SetEmail sets the value of Email.
func (s *CreateUserReq) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *CreateUserReq) SetPassword(val string) {
	s.Password = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateUserReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetSuperuser sets the value of Superuser.
func (s *CreateUserReq) SetSuperuser(val bool) {
	s.Superuser = val
}

// SetQuestions sets the value of Questions.
func (s *CreateUserReq) SetQuestions(val []int) {
	s.Questions = val
}

// SetAnswers sets the value of Answers.
func (s *CreateUserReq) SetAnswers(val []int) {
	s.Answers = val
}

// SetTags sets the value of Tags.
func (s *CreateUserReq) SetTags(val []int) {
	s.Tags = val
}

// DeleteAnswerNoContent is response for DeleteAnswer operation.
type DeleteAnswerNoContent struct{}

func (*DeleteAnswerNoContent) deleteAnswerRes() {}

// DeleteQuestionNoContent is response for DeleteQuestion operation.
type DeleteQuestionNoContent struct{}

func (*DeleteQuestionNoContent) deleteQuestionRes() {}

// DeleteTagNoContent is response for DeleteTag operation.
type DeleteTagNoContent struct{}

func (*DeleteTagNoContent) deleteTagRes() {}

// DeleteUserNoContent is response for DeleteUser operation.
type DeleteUserNoContent struct{}

func (*DeleteUserNoContent) deleteUserRes() {}

type ListAnswerOKApplicationJSON []AnswerList

func (*ListAnswerOKApplicationJSON) listAnswerRes() {}

type ListQuestionAnswersOKApplicationJSON []QuestionAnswersList

func (*ListQuestionAnswersOKApplicationJSON) listQuestionAnswersRes() {}

type ListQuestionOKApplicationJSON []QuestionList

func (*ListQuestionOKApplicationJSON) listQuestionRes() {}

type ListQuestionTagsOKApplicationJSON []QuestionTagsList

func (*ListQuestionTagsOKApplicationJSON) listQuestionTagsRes() {}

type ListTagOKApplicationJSON []TagList

func (*ListTagOKApplicationJSON) listTagRes() {}

type ListTagQuestionsOKApplicationJSON []TagQuestionsList

func (*ListTagQuestionsOKApplicationJSON) listTagQuestionsRes() {}

type ListUserAnswersOKApplicationJSON []UserAnswersList

func (*ListUserAnswersOKApplicationJSON) listUserAnswersRes() {}

type ListUserOKApplicationJSON []UserList

func (*ListUserOKApplicationJSON) listUserRes() {}

type ListUserQuestionsOKApplicationJSON []UserQuestionsList

func (*ListUserQuestionsOKApplicationJSON) listUserQuestionsRes() {}

type ListUserTagsOKApplicationJSON []UserTagsList

func (*ListUserTagsOKApplicationJSON) listUserTagsRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Question_AnswersList
type QuestionAnswersList struct {
	ID        int       `json:"id"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *QuestionAnswersList) GetID() int {
	return s.ID
}

// GetContent returns the value of Content.
func (s *QuestionAnswersList) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *QuestionAnswersList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *QuestionAnswersList) SetID(val int) {
	s.ID = val
}

// SetContent sets the value of Content.
func (s *QuestionAnswersList) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *QuestionAnswersList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/Question_AuthorRead
type QuestionAuthorRead struct {
	ID        int       `json:"id"`
	Username  string    `json:"username"`
	Email     string    `json:"email"`
	CreatedAt time.Time `json:"created_at"`
	Superuser bool      `json:"superuser"`
}

// GetID returns the value of ID.
func (s *QuestionAuthorRead) GetID() int {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *QuestionAuthorRead) GetUsername() string {
	return s.Username
}

// GetEmail returns the value of Email.
func (s *QuestionAuthorRead) GetEmail() string {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *QuestionAuthorRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetSuperuser returns the value of Superuser.
func (s *QuestionAuthorRead) GetSuperuser() bool {
	return s.Superuser
}

// SetID sets the value of ID.
func (s *QuestionAuthorRead) SetID(val int) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *QuestionAuthorRead) SetUsername(val string) {
	s.Username = val
}

// SetEmail sets the value of Email.
func (s *QuestionAuthorRead) SetEmail(val string) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *QuestionAuthorRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetSuperuser sets the value of Superuser.
func (s *QuestionAuthorRead) SetSuperuser(val bool) {
	s.Superuser = val
}

func (*QuestionAuthorRead) readQuestionAuthorRes() {}

// Ref: #/components/schemas/QuestionCreate
type QuestionCreate struct {
	ID        int       `json:"id"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *QuestionCreate) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *QuestionCreate) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *QuestionCreate) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *QuestionCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *QuestionCreate) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *QuestionCreate) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *QuestionCreate) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *QuestionCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*QuestionCreate) createQuestionRes() {}

// Ref: #/components/schemas/QuestionList
type QuestionList struct {
	ID        int       `json:"id"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *QuestionList) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *QuestionList) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *QuestionList) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *QuestionList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *QuestionList) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *QuestionList) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *QuestionList) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *QuestionList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/QuestionRead
type QuestionRead struct {
	ID        int       `json:"id"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *QuestionRead) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *QuestionRead) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *QuestionRead) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *QuestionRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *QuestionRead) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *QuestionRead) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *QuestionRead) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *QuestionRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*QuestionRead) readQuestionRes() {}

// Ref: #/components/schemas/Question_TagsList
type QuestionTagsList struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *QuestionTagsList) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *QuestionTagsList) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *QuestionTagsList) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *QuestionTagsList) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/QuestionUpdate
type QuestionUpdate struct {
	ID        int       `json:"id"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *QuestionUpdate) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *QuestionUpdate) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *QuestionUpdate) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *QuestionUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *QuestionUpdate) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *QuestionUpdate) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *QuestionUpdate) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *QuestionUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*QuestionUpdate) updateQuestionRes() {}

type R400 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R400) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R400) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R400) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R400) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R400) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R400) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R400) createAnswerRes()        {}
func (*R400) createQuestionRes()      {}
func (*R400) createTagRes()           {}
func (*R400) createUserRes()          {}
func (*R400) deleteAnswerRes()        {}
func (*R400) deleteQuestionRes()      {}
func (*R400) deleteTagRes()           {}
func (*R400) deleteUserRes()          {}
func (*R400) listAnswerRes()          {}
func (*R400) listQuestionAnswersRes() {}
func (*R400) listQuestionRes()        {}
func (*R400) listQuestionTagsRes()    {}
func (*R400) listTagQuestionsRes()    {}
func (*R400) listTagRes()             {}
func (*R400) listUserAnswersRes()     {}
func (*R400) listUserQuestionsRes()   {}
func (*R400) listUserRes()            {}
func (*R400) listUserTagsRes()        {}
func (*R400) readAnswerAuthorRes()    {}
func (*R400) readAnswerQuestionRes()  {}
func (*R400) readAnswerRes()          {}
func (*R400) readQuestionAuthorRes()  {}
func (*R400) readQuestionRes()        {}
func (*R400) readTagRes()             {}
func (*R400) readUserRes()            {}
func (*R400) updateAnswerRes()        {}
func (*R400) updateQuestionRes()      {}
func (*R400) updateTagRes()           {}
func (*R400) updateUserRes()          {}

type R404 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R404) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R404) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R404) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R404) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R404) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R404) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R404) deleteAnswerRes()        {}
func (*R404) deleteQuestionRes()      {}
func (*R404) deleteTagRes()           {}
func (*R404) deleteUserRes()          {}
func (*R404) listAnswerRes()          {}
func (*R404) listQuestionAnswersRes() {}
func (*R404) listQuestionRes()        {}
func (*R404) listQuestionTagsRes()    {}
func (*R404) listTagQuestionsRes()    {}
func (*R404) listTagRes()             {}
func (*R404) listUserAnswersRes()     {}
func (*R404) listUserQuestionsRes()   {}
func (*R404) listUserRes()            {}
func (*R404) listUserTagsRes()        {}
func (*R404) readAnswerAuthorRes()    {}
func (*R404) readAnswerQuestionRes()  {}
func (*R404) readAnswerRes()          {}
func (*R404) readQuestionAuthorRes()  {}
func (*R404) readQuestionRes()        {}
func (*R404) readTagRes()             {}
func (*R404) readUserRes()            {}
func (*R404) updateAnswerRes()        {}
func (*R404) updateQuestionRes()      {}
func (*R404) updateTagRes()           {}
func (*R404) updateUserRes()          {}

type R409 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R409) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R409) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R409) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R409) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R409) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R409) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R409) createAnswerRes()        {}
func (*R409) createQuestionRes()      {}
func (*R409) createTagRes()           {}
func (*R409) createUserRes()          {}
func (*R409) deleteAnswerRes()        {}
func (*R409) deleteQuestionRes()      {}
func (*R409) deleteTagRes()           {}
func (*R409) deleteUserRes()          {}
func (*R409) listAnswerRes()          {}
func (*R409) listQuestionAnswersRes() {}
func (*R409) listQuestionRes()        {}
func (*R409) listQuestionTagsRes()    {}
func (*R409) listTagQuestionsRes()    {}
func (*R409) listTagRes()             {}
func (*R409) listUserAnswersRes()     {}
func (*R409) listUserQuestionsRes()   {}
func (*R409) listUserRes()            {}
func (*R409) listUserTagsRes()        {}
func (*R409) readAnswerAuthorRes()    {}
func (*R409) readAnswerQuestionRes()  {}
func (*R409) readAnswerRes()          {}
func (*R409) readQuestionAuthorRes()  {}
func (*R409) readQuestionRes()        {}
func (*R409) readTagRes()             {}
func (*R409) readUserRes()            {}
func (*R409) updateAnswerRes()        {}
func (*R409) updateQuestionRes()      {}
func (*R409) updateTagRes()           {}
func (*R409) updateUserRes()          {}

type R500 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R500) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R500) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R500) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R500) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R500) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R500) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R500) createAnswerRes()        {}
func (*R500) createQuestionRes()      {}
func (*R500) createTagRes()           {}
func (*R500) createUserRes()          {}
func (*R500) deleteAnswerRes()        {}
func (*R500) deleteQuestionRes()      {}
func (*R500) deleteTagRes()           {}
func (*R500) deleteUserRes()          {}
func (*R500) listAnswerRes()          {}
func (*R500) listQuestionAnswersRes() {}
func (*R500) listQuestionRes()        {}
func (*R500) listQuestionTagsRes()    {}
func (*R500) listTagQuestionsRes()    {}
func (*R500) listTagRes()             {}
func (*R500) listUserAnswersRes()     {}
func (*R500) listUserQuestionsRes()   {}
func (*R500) listUserRes()            {}
func (*R500) listUserTagsRes()        {}
func (*R500) readAnswerAuthorRes()    {}
func (*R500) readAnswerQuestionRes()  {}
func (*R500) readAnswerRes()          {}
func (*R500) readQuestionAuthorRes()  {}
func (*R500) readQuestionRes()        {}
func (*R500) readTagRes()             {}
func (*R500) readUserRes()            {}
func (*R500) updateAnswerRes()        {}
func (*R500) updateQuestionRes()      {}
func (*R500) updateTagRes()           {}
func (*R500) updateUserRes()          {}

// Ref: #/components/schemas/TagCreate
type TagCreate struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *TagCreate) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *TagCreate) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *TagCreate) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *TagCreate) SetName(val string) {
	s.Name = val
}

func (*TagCreate) createTagRes() {}

// Ref: #/components/schemas/TagList
type TagList struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *TagList) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *TagList) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *TagList) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *TagList) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/Tag_QuestionsList
type TagQuestionsList struct {
	ID        int       `json:"id"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *TagQuestionsList) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *TagQuestionsList) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *TagQuestionsList) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *TagQuestionsList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *TagQuestionsList) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *TagQuestionsList) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *TagQuestionsList) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *TagQuestionsList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/TagRead
type TagRead struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *TagRead) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *TagRead) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *TagRead) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *TagRead) SetName(val string) {
	s.Name = val
}

func (*TagRead) readTagRes() {}

// Ref: #/components/schemas/TagUpdate
type TagUpdate struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *TagUpdate) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *TagUpdate) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *TagUpdate) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *TagUpdate) SetName(val string) {
	s.Name = val
}

func (*TagUpdate) updateTagRes() {}

type UpdateAnswerReq struct {
	Content  OptString `json:"content"`
	Question OptInt    `json:"question"`
	Author   OptInt    `json:"author"`
}

// GetContent returns the value of Content.
func (s *UpdateAnswerReq) GetContent() OptString {
	return s.Content
}

// GetQuestion returns the value of Question.
func (s *UpdateAnswerReq) GetQuestion() OptInt {
	return s.Question
}

// GetAuthor returns the value of Author.
func (s *UpdateAnswerReq) GetAuthor() OptInt {
	return s.Author
}

// SetContent sets the value of Content.
func (s *UpdateAnswerReq) SetContent(val OptString) {
	s.Content = val
}

// SetQuestion sets the value of Question.
func (s *UpdateAnswerReq) SetQuestion(val OptInt) {
	s.Question = val
}

// SetAuthor sets the value of Author.
func (s *UpdateAnswerReq) SetAuthor(val OptInt) {
	s.Author = val
}

type UpdateQuestionReq struct {
	Title   OptString `json:"title"`
	Content OptString `json:"content"`
	Answers []int     `json:"answers"`
	Author  OptInt    `json:"author"`
	Tags    []int     `json:"tags"`
}

// GetTitle returns the value of Title.
func (s *UpdateQuestionReq) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *UpdateQuestionReq) GetContent() OptString {
	return s.Content
}

// GetAnswers returns the value of Answers.
func (s *UpdateQuestionReq) GetAnswers() []int {
	return s.Answers
}

// GetAuthor returns the value of Author.
func (s *UpdateQuestionReq) GetAuthor() OptInt {
	return s.Author
}

// GetTags returns the value of Tags.
func (s *UpdateQuestionReq) GetTags() []int {
	return s.Tags
}

// SetTitle sets the value of Title.
func (s *UpdateQuestionReq) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *UpdateQuestionReq) SetContent(val OptString) {
	s.Content = val
}

// SetAnswers sets the value of Answers.
func (s *UpdateQuestionReq) SetAnswers(val []int) {
	s.Answers = val
}

// SetAuthor sets the value of Author.
func (s *UpdateQuestionReq) SetAuthor(val OptInt) {
	s.Author = val
}

// SetTags sets the value of Tags.
func (s *UpdateQuestionReq) SetTags(val []int) {
	s.Tags = val
}

type UpdateTagReq struct {
	Name      OptString `json:"name"`
	Questions []int     `json:"questions"`
}

// GetName returns the value of Name.
func (s *UpdateTagReq) GetName() OptString {
	return s.Name
}

// GetQuestions returns the value of Questions.
func (s *UpdateTagReq) GetQuestions() []int {
	return s.Questions
}

// SetName sets the value of Name.
func (s *UpdateTagReq) SetName(val OptString) {
	s.Name = val
}

// SetQuestions sets the value of Questions.
func (s *UpdateTagReq) SetQuestions(val []int) {
	s.Questions = val
}

type UpdateUserReq struct {
	Username  OptString `json:"username"`
	Email     OptString `json:"email"`
	Password  OptString `json:"password"`
	Superuser OptBool   `json:"superuser"`
	Questions []int     `json:"questions"`
	Answers   []int     `json:"answers"`
	Tags      []int     `json:"tags"`
}

// GetUsername returns the value of Username.
func (s *UpdateUserReq) GetUsername() OptString {
	return s.Username
}

// GetEmail returns the value of Email.
func (s *UpdateUserReq) GetEmail() OptString {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *UpdateUserReq) GetPassword() OptString {
	return s.Password
}

// GetSuperuser returns the value of Superuser.
func (s *UpdateUserReq) GetSuperuser() OptBool {
	return s.Superuser
}

// GetQuestions returns the value of Questions.
func (s *UpdateUserReq) GetQuestions() []int {
	return s.Questions
}

// GetAnswers returns the value of Answers.
func (s *UpdateUserReq) GetAnswers() []int {
	return s.Answers
}

// GetTags returns the value of Tags.
func (s *UpdateUserReq) GetTags() []int {
	return s.Tags
}

// SetUsername sets the value of Username.
func (s *UpdateUserReq) SetUsername(val OptString) {
	s.Username = val
}

// SetEmail sets the value of Email.
func (s *UpdateUserReq) SetEmail(val OptString) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *UpdateUserReq) SetPassword(val OptString) {
	s.Password = val
}

// SetSuperuser sets the value of Superuser.
func (s *UpdateUserReq) SetSuperuser(val OptBool) {
	s.Superuser = val
}

// SetQuestions sets the value of Questions.
func (s *UpdateUserReq) SetQuestions(val []int) {
	s.Questions = val
}

// SetAnswers sets the value of Answers.
func (s *UpdateUserReq) SetAnswers(val []int) {
	s.Answers = val
}

// SetTags sets the value of Tags.
func (s *UpdateUserReq) SetTags(val []int) {
	s.Tags = val
}

// Ref: #/components/schemas/User_AnswersList
type UserAnswersList struct {
	ID        int       `json:"id"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *UserAnswersList) GetID() int {
	return s.ID
}

// GetContent returns the value of Content.
func (s *UserAnswersList) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserAnswersList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserAnswersList) SetID(val int) {
	s.ID = val
}

// SetContent sets the value of Content.
func (s *UserAnswersList) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserAnswersList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/UserCreate
type UserCreate struct {
	ID        int       `json:"id"`
	Username  string    `json:"username"`
	Email     string    `json:"email"`
	CreatedAt time.Time `json:"created_at"`
	Superuser bool      `json:"superuser"`
}

// GetID returns the value of ID.
func (s *UserCreate) GetID() int {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *UserCreate) GetUsername() string {
	return s.Username
}

// GetEmail returns the value of Email.
func (s *UserCreate) GetEmail() string {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetSuperuser returns the value of Superuser.
func (s *UserCreate) GetSuperuser() bool {
	return s.Superuser
}

// SetID sets the value of ID.
func (s *UserCreate) SetID(val int) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *UserCreate) SetUsername(val string) {
	s.Username = val
}

// SetEmail sets the value of Email.
func (s *UserCreate) SetEmail(val string) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetSuperuser sets the value of Superuser.
func (s *UserCreate) SetSuperuser(val bool) {
	s.Superuser = val
}

func (*UserCreate) createUserRes() {}

// Ref: #/components/schemas/UserList
type UserList struct {
	ID        int       `json:"id"`
	Username  string    `json:"username"`
	Email     string    `json:"email"`
	CreatedAt time.Time `json:"created_at"`
	Superuser bool      `json:"superuser"`
}

// GetID returns the value of ID.
func (s *UserList) GetID() int {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *UserList) GetUsername() string {
	return s.Username
}

// GetEmail returns the value of Email.
func (s *UserList) GetEmail() string {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetSuperuser returns the value of Superuser.
func (s *UserList) GetSuperuser() bool {
	return s.Superuser
}

// SetID sets the value of ID.
func (s *UserList) SetID(val int) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *UserList) SetUsername(val string) {
	s.Username = val
}

// SetEmail sets the value of Email.
func (s *UserList) SetEmail(val string) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetSuperuser sets the value of Superuser.
func (s *UserList) SetSuperuser(val bool) {
	s.Superuser = val
}

// Ref: #/components/schemas/User_QuestionsList
type UserQuestionsList struct {
	ID        int       `json:"id"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *UserQuestionsList) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *UserQuestionsList) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *UserQuestionsList) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserQuestionsList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserQuestionsList) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *UserQuestionsList) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *UserQuestionsList) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserQuestionsList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/UserRead
type UserRead struct {
	ID        int       `json:"id"`
	Username  string    `json:"username"`
	Email     string    `json:"email"`
	CreatedAt time.Time `json:"created_at"`
	Superuser bool      `json:"superuser"`
}

// GetID returns the value of ID.
func (s *UserRead) GetID() int {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *UserRead) GetUsername() string {
	return s.Username
}

// GetEmail returns the value of Email.
func (s *UserRead) GetEmail() string {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetSuperuser returns the value of Superuser.
func (s *UserRead) GetSuperuser() bool {
	return s.Superuser
}

// SetID sets the value of ID.
func (s *UserRead) SetID(val int) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *UserRead) SetUsername(val string) {
	s.Username = val
}

// SetEmail sets the value of Email.
func (s *UserRead) SetEmail(val string) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetSuperuser sets the value of Superuser.
func (s *UserRead) SetSuperuser(val bool) {
	s.Superuser = val
}

func (*UserRead) readUserRes() {}

// Ref: #/components/schemas/User_TagsList
type UserTagsList struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *UserTagsList) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserTagsList) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *UserTagsList) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserTagsList) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/UserUpdate
type UserUpdate struct {
	ID        int       `json:"id"`
	Username  string    `json:"username"`
	Email     string    `json:"email"`
	CreatedAt time.Time `json:"created_at"`
	Superuser bool      `json:"superuser"`
}

// GetID returns the value of ID.
func (s *UserUpdate) GetID() int {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *UserUpdate) GetUsername() string {
	return s.Username
}

// GetEmail returns the value of Email.
func (s *UserUpdate) GetEmail() string {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetSuperuser returns the value of Superuser.
func (s *UserUpdate) GetSuperuser() bool {
	return s.Superuser
}

// SetID sets the value of ID.
func (s *UserUpdate) SetID(val int) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *UserUpdate) SetUsername(val string) {
	s.Username = val
}

// SetEmail sets the value of Email.
func (s *UserUpdate) SetEmail(val string) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetSuperuser sets the value of Superuser.
func (s *UserUpdate) SetSuperuser(val bool) {
	s.Superuser = val
}

func (*UserUpdate) updateUserRes() {}
