{
  "openapi": "3.0.3",
  "info": {
    "title": "Ent Schema API",
    "description": "This is an auto generated API description made out of an Ent schema definition",
    "version": "0.1.0"
  },
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "description": "Login user.",
        "operationId": "loginUser",
        "requestBody": {
          "description": "Auth user",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Succesfully logged in"
          }
        }
      }
    },
    "/answers": {
      "get": {
        "tags": [
          "Answer"
        ],
        "summary": "List Answers",
        "description": "List Answers.",
        "operationId": "listAnswer",
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "description": "filter records by content",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_sort",
            "in": "query",
            "description": "sorting records by field",
            "schema": {
              "type": "string",
              "default": "id"
            }
          },
          {
            "name": "_order",
            "in": "query",
            "description": "sorting records by direction (ASC/DESC)",
            "schema": {
              "type": "string",
              "default": "DESC"
            }
          },
          {
            "name": "_start",
            "in": "query",
            "description": "start pagination of records",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "_end",
            "in": "query",
            "description": "end pagination of records",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Answer list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnswerList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Answer"
        ],
        "summary": "Create a new Answer",
        "description": "Creates a new Answer and persists it to storage.",
        "operationId": "createAnswer",
        "requestBody": {
          "description": "Answer to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "question": {
                    "type": "integer"
                  },
                  "author": {
                    "type": "integer"
                  }
                },
                "required": [
                  "content",
                  "created_at"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Answer created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/answers/{id}": {
      "get": {
        "tags": [
          "Answer"
        ],
        "summary": "Find a Answer by ID",
        "description": "Finds the Answer with the requested ID and returns it.",
        "operationId": "readAnswer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Answer",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Answer with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Answer"
        ],
        "summary": "Deletes a Answer by ID",
        "description": "Deletes the Answer with the requested ID.",
        "operationId": "deleteAnswer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Answer",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Answer with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Answer"
        ],
        "summary": "Updates a Answer",
        "description": "Updates a Answer and persists changes to storage.",
        "operationId": "updateAnswer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Answer",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Answer properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "question": {
                    "type": "integer"
                  },
                  "author": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Answer updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/answers/{id}/author": {
      "get": {
        "tags": [
          "Answer"
        ],
        "summary": "Find the attached User",
        "description": "Find the attached User of the Answer with the given ID",
        "operationId": "readAnswerAuthor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Answer",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User attached to Answer with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Answer_AuthorRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/answers/{id}/question": {
      "get": {
        "tags": [
          "Answer"
        ],
        "summary": "Find the attached Question",
        "description": "Find the attached Question of the Answer with the given ID",
        "operationId": "readAnswerQuestion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Answer",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Question attached to Answer with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Answer_QuestionRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/questions": {
      "get": {
        "tags": [
          "Question"
        ],
        "summary": "List Questions",
        "description": "List Questions.",
        "operationId": "listQuestion",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "filter records by title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "description": "filter records by content",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_sort",
            "in": "query",
            "description": "sorting records by field",
            "schema": {
              "type": "string",
              "default": "id"
            }
          },
          {
            "name": "_order",
            "in": "query",
            "description": "sorting records by direction (ASC/DESC)",
            "schema": {
              "type": "string",
              "default": "DESC"
            }
          },
          {
            "name": "_start",
            "in": "query",
            "description": "start pagination of records",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "_end",
            "in": "query",
            "description": "end pagination of records",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Question list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Question"
        ],
        "summary": "Create a new Question",
        "description": "Creates a new Question and persists it to storage.",
        "operationId": "createQuestion",
        "requestBody": {
          "description": "Question to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "answers": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "author": {
                    "type": "integer"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "question_tag": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "title",
                  "content",
                  "created_at"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Question created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/questions/{id}": {
      "get": {
        "tags": [
          "Question"
        ],
        "summary": "Find a Question by ID",
        "description": "Finds the Question with the requested ID and returns it.",
        "operationId": "readQuestion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Question",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Question with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Question"
        ],
        "summary": "Deletes a Question by ID",
        "description": "Deletes the Question with the requested ID.",
        "operationId": "deleteQuestion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Question",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Question with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Question"
        ],
        "summary": "Updates a Question",
        "description": "Updates a Question and persists changes to storage.",
        "operationId": "updateQuestion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Question",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Question properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "answers": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "author": {
                    "type": "integer"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "question_tag": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Question updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/questions/{id}/answers": {
      "get": {
        "tags": [
          "Question"
        ],
        "summary": "List attached Answers",
        "description": "List attached Answers.",
        "operationId": "listQuestionAnswers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Question",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Questions list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question_AnswersList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/questions/{id}/author": {
      "get": {
        "tags": [
          "Question"
        ],
        "summary": "Find the attached User",
        "description": "Find the attached User of the Question with the given ID",
        "operationId": "readQuestionAuthor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Question",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User attached to Question with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question_AuthorRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/questions/{id}/tags": {
      "get": {
        "tags": [
          "Question"
        ],
        "summary": "List attached Tags",
        "description": "List attached Tags.",
        "operationId": "listQuestionTags",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Question",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Questions list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question_TagsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/tags": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "List Tags",
        "description": "List Tags.",
        "operationId": "listTag",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "filter records by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_sort",
            "in": "query",
            "description": "sorting records by field",
            "schema": {
              "type": "string",
              "default": "id"
            }
          },
          {
            "name": "_order",
            "in": "query",
            "description": "sorting records by direction (ASC/DESC)",
            "schema": {
              "type": "string",
              "default": "DESC"
            }
          },
          {
            "name": "_start",
            "in": "query",
            "description": "start pagination of records",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "_end",
            "in": "query",
            "description": "end pagination of records",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Tag list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Tag"
        ],
        "summary": "Create a new Tag",
        "description": "Creates a new Tag and persists it to storage.",
        "operationId": "createTag",
        "requestBody": {
          "description": "Tag to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "question": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "tag_question": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Tag created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/tags/{id}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Find a Tag by ID",
        "description": "Finds the Tag with the requested ID and returns it.",
        "operationId": "readTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Tag",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Tag"
        ],
        "summary": "Deletes a Tag by ID",
        "description": "Deletes the Tag with the requested ID.",
        "operationId": "deleteTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Tag",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Tag with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Tag"
        ],
        "summary": "Updates a Tag",
        "description": "Updates a Tag and persists changes to storage.",
        "operationId": "updateTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Tag",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Tag properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "question": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "tag_question": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Tag updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/tags/{id}/question": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "List attached Questions",
        "description": "List attached Questions.",
        "operationId": "listTagQuestion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Tag",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Tags list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag_QuestionList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List Users",
        "description": "List Users.",
        "operationId": "listUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "filter records by username",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "filter records by email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_sort",
            "in": "query",
            "description": "sorting records by field",
            "schema": {
              "type": "string",
              "default": "id"
            }
          },
          {
            "name": "_order",
            "in": "query",
            "description": "sorting records by direction (ASC/DESC)",
            "schema": {
              "type": "string",
              "default": "DESC"
            }
          },
          {
            "name": "_start",
            "in": "query",
            "description": "start pagination of records",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "_end",
            "in": "query",
            "description": "end pagination of records",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result User list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Create a new User",
        "description": "Creates a new User and persists it to storage.",
        "operationId": "createUser",
        "requestBody": {
          "description": "User to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "questions": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "answers": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "username",
                  "email",
                  "password",
                  "created_at"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Find a User by ID",
        "description": "Finds the User with the requested ID and returns it.",
        "operationId": "readUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Deletes a User by ID",
        "description": "Deletes the User with the requested ID.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Updates a User",
        "description": "Updates a User and persists changes to storage.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "User properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "questions": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "answers": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}/answers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List attached Answers",
        "description": "List attached Answers.",
        "operationId": "listUserAnswers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Users list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User_AnswersList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}/questions": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List attached Questions",
        "description": "List attached Questions.",
        "operationId": "listUserQuestions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Users list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User_QuestionsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Answer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "question": {
            "$ref": "#/components/schemas/Question"
          },
          "author": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "id",
          "content",
          "created_at"
        ]
      },
      "AnswerCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "content",
          "created_at"
        ]
      },
      "AnswerList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "content",
          "created_at"
        ]
      },
      "AnswerRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "content",
          "created_at"
        ]
      },
      "AnswerUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "content",
          "created_at"
        ]
      },
      "Answer_AuthorRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "created_at"
        ]
      },
      "Answer_QuestionRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "created_at"
        ]
      },
      "Question": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Answer"
            }
          },
          "author": {
            "$ref": "#/components/schemas/User"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "question_tag": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionTag"
            }
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "created_at"
        ]
      },
      "QuestionCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "created_at"
        ]
      },
      "QuestionList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "created_at"
        ]
      },
      "QuestionRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "created_at"
        ]
      },
      "QuestionTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "question_id": {
            "type": "integer"
          },
          "tag_id": {
            "type": "integer"
          },
          "question": {
            "$ref": "#/components/schemas/Question"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "required": [
          "id",
          "question_id",
          "tag_id",
          "question",
          "tag"
        ]
      },
      "QuestionTagCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "question_id": {
            "type": "integer"
          },
          "tag_id": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "question_id",
          "tag_id"
        ]
      },
      "QuestionTagList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "question_id": {
            "type": "integer"
          },
          "tag_id": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "question_id",
          "tag_id"
        ]
      },
      "QuestionTagRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "question_id": {
            "type": "integer"
          },
          "tag_id": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "question_id",
          "tag_id"
        ]
      },
      "QuestionTagUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "question_id": {
            "type": "integer"
          },
          "tag_id": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "question_id",
          "tag_id"
        ]
      },
      "QuestionTag_QuestionRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "created_at"
        ]
      },
      "QuestionTag_TagRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "QuestionUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "created_at"
        ]
      },
      "Question_AnswersList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "content",
          "created_at"
        ]
      },
      "Question_AuthorRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "created_at"
        ]
      },
      "Question_QuestionTagList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "question_id": {
            "type": "integer"
          },
          "tag_id": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "question_id",
          "tag_id"
        ]
      },
      "Question_TagsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "question": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Question"
            }
          },
          "tag_question": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionTag"
            }
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "TagCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "TagList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "TagRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "TagUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Tag_QuestionList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "created_at"
        ]
      },
      "Tag_TagQuestionList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "question_id": {
            "type": "integer"
          },
          "tag_id": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "question_id",
          "tag_id"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Question"
            }
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Answer"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "password",
          "created_at"
        ]
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "created_at"
        ]
      },
      "UserList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "created_at"
        ]
      },
      "UserRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "created_at"
        ]
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "created_at"
        ]
      },
      "User_AnswersList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "content",
          "created_at"
        ]
      },
      "User_QuestionsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "created_at"
        ]
      },
      "User_TagsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      }
    },
    "responses": {
      "400": {
        "description": "invalid input, data invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "403": {
        "description": "insufficient permissions",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "404": {
        "description": "resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "409": {
        "description": "conflicting resources",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "500": {
        "description": "unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      }
    }
  }
}